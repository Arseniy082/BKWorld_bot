import TelegramBot from "node-telegram-bot-api";
import axios from "axios";
import * as cheerio from "cheerio";
import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";
import dotenv from "dotenv";
dotenv.config();

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });

// === –ö–æ–º–∞–Ω–¥–∞ /online ===
bot.onText(/\/online/, async (msg) => {
  const chatId = msg.chat.id;
  await bot.sendMessage(chatId, "‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é —Å–∞–π—Ç...");

  try {
    const { data } = await axios.get("https://status.tw/clan/BKW");
    const $ = cheerio.load(data);
    const players = [];

    $("div").each((i, el) => {
      const text = $(el).text().trim();
      if (
        text &&
        !text.includes("Player list") &&
        !text.includes("Players") &&
        text.length > 1 &&
        text.length < 30
      ) {
        players.push(text);
      }
    });

    if (players.length === 0)
      return bot.sendMessage(chatId, "‚ö†Ô∏è –ù–∞ —Å–∞–π—Ç–µ –Ω–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω.");

    await bot.sendMessage(
      chatId,
      `üéÆ –ù–∞–π–¥–µ–Ω–æ ${players.length} –Ω–∏–∫(–æ–≤):\n\n${players.join("\n")}`
    );
  } catch (err) {
    console.error(err);
    bot.sendMessage(chatId, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤.");
  }
});

// === –ö–æ–º–∞–Ω–¥–∞ /compare ===
bot.onText(/\/compare (.+) (.+)/, async (msg, match) => {
  const chatId = msg.chat.id;
  const player1 = match[1];
  const player2 = match[2];
  await bot.sendMessage(chatId, `‚öîÔ∏è –°—Ä–∞–≤–Ω–∏–≤–∞—é ${player1} –∏ ${player2}...`);

  try {
    const p1 = await getPlayerStats(player1);
    const p2 = await getPlayerStats(player2);

    if (!p1 || !p2)
      return bot.sendMessage(
        chatId,
        "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–¥–Ω–æ–≥–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤."
      );

    const result =
      `üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤:\n\n` +
      `üë§ ${player1} ‚Äî –û—á–∫–∏: ${p1.points}, –†–∞–Ω–≥: ${p1.rank}\n` +
      `üë§ ${player2} ‚Äî –û—á–∫–∏: ${p2.points}, –†–∞–Ω–≥: ${p2.rank}\n\n` +
      (p1.points > p2.points
        ? `üèÜ ${player1} —Å–∏–ª—å–Ω–µ–µ!`
        : p2.points > p1.points
        ? `üèÜ ${player2} —Å–∏–ª—å–Ω–µ–µ!`
        : "ü§ù –†–∞–≤–Ω—ã –ø–æ –æ—á–∫–∞–º!");

    bot.sendMessage(chatId, result);
  } catch (err) {
    console.error(err);
    bot.sendMessage(chatId, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–æ–≤.");
  }
});

// === –ö–æ–º–∞–Ω–¥–∞ /statistics ===
bot.onText(/\/statistics/, async (msg) => {
  const chatId = msg.chat.id;
  await bot.sendMessage(chatId, "üìä –ó–∞–≥—Ä—É–∂–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–ª–∞–Ω–∞...");

  try {
    const { data } = await axios.get("https://api.teerank.io/clan/BKW");

    if (!data || !data.stats)
      return bot.sendMessage(chatId, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω–∞.");

    const stats = data.stats;
    const message =
      `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∞–Ω–∞ BKW:*\n\n` +
      `üèÜ –†–∞–Ω–≥: ${stats.rank}\n` +
      `üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${stats.members}\n` +
      `üïπÔ∏è –û—á–∫–∏: ${stats.points}\n` +
      `üìà –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: ${stats.average_rank}`;

    bot.sendMessage(chatId, message, { parse_mode: "Markdown" });
  } catch (err) {
    console.error(err);
    bot.sendMessage(chatId, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–ª–∞–Ω–∞.");
  }
});

// === –ö–æ–º–∞–Ω–¥–∞ /serverlist ===
bot.onText(/\/serverlist/, async (msg) => {
  const chatId = msg.chat.id;
  await bot.sendMessage(chatId, "üñ•Ô∏è –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤...");

  try {
    const { data } = await axios.get("https://status.tw/api/server/list");

    if (!Array.isArray(data) || data.length === 0)
      return bot.sendMessage(chatId, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞.");

    let message = "üñ•Ô∏è *–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤:*\n\n";
    data.slice(0, 10).forEach((s) => {
      message += `üéÆ ${s.name}\nüó∫Ô∏è ${s.map}\nüë• ${s.clients}/${s.maxclients}\nüåç ${s.country}\n\n`;
    });

    bot.sendMessage(chatId, message, { parse_mode: "Markdown" });
  } catch (err) {
    console.error(err);
    bot.sendMessage(chatId, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤.");
  }
});

// === –ö–æ–º–∞–Ω–¥–∞ /skinpack ===
bot.onText(/\/skinpack/, async (msg) => {
  const chatId = msg.chat.id;
  const photoPath = path.join(__dirname, "photo_2025-10-30_11-37-29.jpg");
  const filePath = path.join(__dirname, "Skin pack by BKWORLD.zip");

  const caption =
    "üß• *Skin Pack by BKWORLD*\n\n" +
    "üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å —Å–∫–∏–Ω –ø–∞–∫ –Ω—É–∂–Ω–æ –≤ –ø–∞–ø–∫—É:\n\n" +
    "*Windows:*\nC:\\Users\\–ò–º—è_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\\AppData\\Roaming\\DDNet\\skins\n\n" +
    "*Android:*\n–¢–µ–ª–µ—Ñ–æ–Ω/Android/data/org.ddnet.client/files/user/skins";

  await bot.sendPhoto(chatId, photoPath, {
    caption,
    parse_mode: "Markdown",
  });

  await bot.sendDocument(chatId, filePath);
});

// === –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è /compare ===
async function getPlayerStats(name) {
  try {
    const { data } = await axios.get(`https://ddnet.org/players/${name}/`);
    const $ = cheerio.load(data);

    const points = $('td:contains("Points")').next().text().trim() || "0";
    const rank = $('td:contains("Rank")').next().text().trim() || "N/A";

    return { points: parseInt(points) || 0, rank };
  } catch {
    return null;
  }
}
