const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");
const cheerio = require("cheerio");
require("dotenv").config();

const token = process.env.TELEGRAM_BOT_TOKEN;
const clanUrl = process.env.CLAN_URL;

if (!token || !clanUrl) {
  console.error("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω TELEGRAM_BOT_TOKEN –∏–ª–∏ CLAN_URL –≤ .env");
  process.exit(1);
}

const bot = new TelegramBot(token, { polling: true });

// ============================
// üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
// ============================
async function getPlayerNames() {
  try {
    const { data } = await axios.get(clanUrl, {
      headers: {
        "User-Agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.1 Safari/537.36",
      },
    });

    const $ = cheerio.load(data);
    const names = [];
    $("a[href^='/player/']").each((i, el) => {
      const name = $(el).text().trim();
      if (name && !/player list/i.test(name)) names.push(name);
    });

    return names;
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞:", err.message);
    return null;
  }
}

// ============================
// ‚öîÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–æ–≤
// ============================
async function getPlayerStats(name) {
  try {
    const url = `https://ddnet.org/players/${encodeURIComponent(name)}/`;
    const { data } = await axios.get(url, {
      headers: {
        "User-Agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.1 Safari/537.36",
      },
    });

    const $ = cheerio.load(data);
    const stats = {};

    // –ü—Ä–∏–º–µ—Ä: –∏—â–µ–º —Å—Ç—Ä–æ–∫—É "Ranks points: 1234"
    $("table.stats tr").each((_, el) => {
      const key = $(el).find("th").text().trim();
      const val = $(el).find("td").text().trim();
      if (key && val) stats[key] = val;
    });

    return stats;
  } catch (err) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö ${name}:`, err.message);
    return null;
  }
}

// ============================
// ü§ñ –ö–æ–º–∞–Ω–¥—ã Telegram
// ============================

// /start
bot.onText(/\/start/, (msg) => {
  bot.sendMessage(
    msg.chat.id,
    "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n" +
      "‚Ä¢ /check ‚Äî —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Å —Å–∞–π—Ç–∞\n" +
      "‚Ä¢ /duel <–Ω–∏–∫1> <–Ω–∏–∫2> ‚Äî —Å—Ä–∞–≤–Ω–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–æ–≤ —Å ddnet.org"
  );
});

// /check
bot.onText(/\/check/, async (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, "‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é —Å–∞–π—Ç...");

  const names = await getPlayerNames();

  if (!names) return bot.sendMessage(chatId, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤.");
  if (names.length === 0) return bot.sendMessage(chatId, "üòï –ò–≥—Ä–æ–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.");

  const text = names.map((n, i) => `${i + 1}. ${n}`).join("\n");
  bot.sendMessage(chatId, `üéÆ –ù–∞–π–¥–µ–Ω–æ ${names.length} –Ω–∏–∫(–æ–≤):\n\n${text}`);
});

// /duel <–∏–≥—Ä–æ–∫1> <–∏–≥—Ä–æ–∫2>
bot.onText(/\/duel (.+)/, async (msg, match) => {
  const chatId = msg.chat.id;
  const args = match[1].split(" ").filter(Boolean);

  if (args.length !== 2) {
    return bot.sendMessage(
      chatId,
      "‚öîÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /duel <–Ω–∏–∫1> <–Ω–∏–∫2>\n–ü—Ä–∏–º–µ—Ä: /duel test player123"
    );
  }

  const [p1, p2] = args;
  bot.sendMessage(chatId, `‚è≥ –°—Ä–∞–≤–Ω–∏–≤–∞—é ${p1} –∏ ${p2}...`);

  const [s1, s2] = await Promise.all([getPlayerStats(p1), getPlayerStats(p2)]);

  if (!s1 || !s2)
    return bot.sendMessage(chatId, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–¥–Ω–æ–≥–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤.");

  let text = `‚öîÔ∏è Duel: ${p1} vs ${p2}\n\n`;

  // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ–±—â–∏–µ –ø–æ–ª—è
  const keys = Object.keys(s1).filter((k) => s2[k]);

  if (keys.length === 0) {
    text += "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ–±—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.";
  } else {
    for (const key of keys) {
      text += `üè∑Ô∏è ${key}\n${p1}: ${s1[key]}\n${p2}: ${s2[key]}\n\n`;
    }
  }

  bot.sendMessage(chatId, text);
});

console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç –∫–æ–º–∞–Ω–¥—ã –≤ Telegram...");
